{"ast":null,"code":"import React,{useContext}from\"react\";import\"./Talks.scss\";import TalkCard from\"../../components/talkCard/TalkCard\";import{talkSection}from\"../../portfolio\";import{Fade}from\"react-reveal\";import StyleContext from\"../../contexts/StyleContext\";export default function Talks(){var _useContext=useContext(StyleContext),isDark=_useContext.isDark;if(!talkSection.display){return null;}return/*#__PURE__*/React.createElement(Fade,{bottom:true,duration:1000,distance:\"20px\"},/*#__PURE__*/React.createElement(\"div\",{className:\"main\",id:\"talks\"},/*#__PURE__*/React.createElement(\"div\",{className:\"talk-header\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"talk-header-title\"},talkSection.title),/*#__PURE__*/React.createElement(\"p\",{className:isDark?\"dark-mode talk-header-subtitle\":\"subTitle talk-header-subtitle\"},talkSection.subtitle),talkSection.talks.map(function(talk,i){return/*#__PURE__*/React.createElement(TalkCard,{key:i,talkDetails:{title:talk.title,subtitle:talk.subtitle,slides_url:talk.slides_url,event_url:talk.event_url,image:talk.image,isDark:isDark}});}))));}","map":{"version":3,"sources":["/Users/thinguyen/Desktop/dev/practice/developerFolio/src/containers/talks/Talks.js"],"names":["React","useContext","TalkCard","talkSection","Fade","StyleContext","Talks","isDark","display","title","subtitle","talks","map","talk","i","slides_url","event_url","image"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,KAAgC,OAAhC,CACA,MAAO,cAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,oCAArB,CACA,OAAQC,WAAR,KAA0B,iBAA1B,CACA,OAAQC,IAAR,KAAmB,cAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,6BAAzB,CAEA,cAAe,SAASC,CAAAA,KAAT,EAAiB,iBACbL,UAAU,CAACI,YAAD,CADG,CACvBE,MADuB,aACvBA,MADuB,CAE9B,GAAI,CAACJ,WAAW,CAACK,OAAjB,CAA0B,CACxB,MAAO,KAAP,CACD,CACD,mBACE,oBAAC,IAAD,EAAM,MAAM,KAAZ,CAAa,QAAQ,CAAE,IAAvB,CAA6B,QAAQ,CAAC,MAAtC,eACE,2BAAK,SAAS,CAAC,MAAf,CAAsB,EAAE,CAAC,OAAzB,eACE,2BAAK,SAAS,CAAC,aAAf,eACE,0BAAI,SAAS,CAAC,mBAAd,EAAmCL,WAAW,CAACM,KAA/C,CADF,cAEE,yBACE,SAAS,CACPF,MAAM,CACF,gCADE,CAEF,+BAJR,EAOGJ,WAAW,CAACO,QAPf,CAFF,CAWGP,WAAW,CAACQ,KAAZ,CAAkBC,GAAlB,CAAsB,SAACC,IAAD,CAAOC,CAAP,CAAa,CAClC,mBACE,oBAAC,QAAD,EACE,GAAG,CAAEA,CADP,CAEE,WAAW,CAAE,CACXL,KAAK,CAAEI,IAAI,CAACJ,KADD,CAEXC,QAAQ,CAAEG,IAAI,CAACH,QAFJ,CAGXK,UAAU,CAAEF,IAAI,CAACE,UAHN,CAIXC,SAAS,CAAEH,IAAI,CAACG,SAJL,CAKXC,KAAK,CAAEJ,IAAI,CAACI,KALD,CAMXV,MAAM,CAANA,MANW,CAFf,EADF,CAaD,CAdA,CAXH,CADF,CADF,CADF,CAiCD","sourcesContent":["import React, {useContext} from \"react\";\nimport \"./Talks.scss\";\nimport TalkCard from \"../../components/talkCard/TalkCard\";\nimport {talkSection} from \"../../portfolio\";\nimport {Fade} from \"react-reveal\";\nimport StyleContext from \"../../contexts/StyleContext\";\n\nexport default function Talks() {\n  const {isDark} = useContext(StyleContext);\n  if (!talkSection.display) {\n    return null;\n  }\n  return (\n    <Fade bottom duration={1000} distance=\"20px\">\n      <div className=\"main\" id=\"talks\">\n        <div className=\"talk-header\">\n          <h1 className=\"talk-header-title\">{talkSection.title}</h1>\n          <p\n            className={\n              isDark\n                ? \"dark-mode talk-header-subtitle\"\n                : \"subTitle talk-header-subtitle\"\n            }\n          >\n            {talkSection.subtitle}\n          </p>\n          {talkSection.talks.map((talk, i) => {\n            return (\n              <TalkCard\n                key={i}\n                talkDetails={{\n                  title: talk.title,\n                  subtitle: talk.subtitle,\n                  slides_url: talk.slides_url,\n                  event_url: talk.event_url,\n                  image: talk.image,\n                  isDark\n                }}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </Fade>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}