{"ast":null,"code":"import _slicedToArray from \"/Users/thinguyen/Desktop/dev/practice/developerFolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/thinguyen/Desktop/dev/practice/developerFolio/src/containers/projects/Projects.js\";\nimport React, { useState, useEffect, useContext, Suspense, lazy } from \"react\";\nimport \"./Project.scss\";\nimport Button from \"../../components/button/Button\";\nimport { openSource, socialMediaLinks } from \"../../portfolio\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport Loading from \"../../containers/loading/Loading\";\nexport default function Projects() {\n  var _this = this;\n\n  var GithubRepoCard = lazy(function () {\n    return import(\"../../components/githubRepoCard/GithubRepoCard\");\n  });\n\n  var FailedLoading = function FailedLoading() {\n    return null;\n  };\n\n  var renderLoader = function renderLoader() {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 30\n      }\n    });\n  };\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      repo = _useState2[0],\n      setrepo = _useState2[1]; // todo: remove useContex because is not supported\n\n\n  var _useContext = useContext(StyleContext),\n      isDark = _useContext.isDark;\n\n  useEffect(function () {\n    var getRepoData = function getRepoData() {\n      fetch(\"/profile.json\").then(function (result) {\n        if (result.ok) {\n          return result.json();\n        }\n\n        throw result;\n      }).then(function (response) {\n        setrepoFunction(response.data.user.pinnedItems.edges);\n      }).catch(function (error) {\n        console.error(\"\".concat(error, \" (because of this error, nothing is shown in place of Projects section. Also check if Projects section has been configured)\"));\n        setrepoFunction(\"Error\");\n      });\n    };\n\n    getRepoData();\n  }, []);\n\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n\n  if (!(typeof repo === \"string\" || repo instanceof String) && openSource.display) {\n    return /*#__PURE__*/React.createElement(Suspense, {\n      fallback: renderLoader(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      id: \"opensource\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"project-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Github\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"repo-cards-div-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, repo.map(function (v, i) {\n      if (!v) {\n        console.error(\"Github Object for repository number : \".concat(i, \" is undefined\"));\n      }\n\n      return /*#__PURE__*/React.createElement(GithubRepoCard, {\n        repo: v,\n        key: v.node.id,\n        isDark: isDark,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      });\n    })), /*#__PURE__*/React.createElement(Button, {\n      text: \"More Projects\",\n      className: \"project-button\",\n      href: socialMediaLinks.github,\n      newTab: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(FailedLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }\n    });\n  }\n}","map":{"version":3,"sources":["/Users/thinguyen/Desktop/dev/practice/developerFolio/src/containers/projects/Projects.js"],"names":["React","useState","useEffect","useContext","Suspense","lazy","Button","openSource","socialMediaLinks","StyleContext","Loading","Projects","GithubRepoCard","FailedLoading","renderLoader","repo","setrepo","isDark","getRepoData","fetch","then","result","ok","json","response","setrepoFunction","data","user","pinnedItems","edges","catch","error","console","array","String","display","map","v","i","node","id","github"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext, Suspense, lazy} from \"react\";\nimport \"./Project.scss\";\nimport Button from \"../../components/button/Button\";\nimport {openSource, socialMediaLinks} from \"../../portfolio\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport Loading from \"../../containers/loading/Loading\";\nexport default function Projects() {\n  const GithubRepoCard = lazy(() =>\n    import(\"../../components/githubRepoCard/GithubRepoCard\")\n  );\n  const FailedLoading = () => null;\n  const renderLoader = () => <Loading />;\n  const [repo, setrepo] = useState([]);\n  // todo: remove useContex because is not supported\n  const {isDark} = useContext(StyleContext);\n\n  useEffect(() => {\n    const getRepoData = () => {\n      fetch(\"/profile.json\")\n        .then(result => {\n          if (result.ok) {\n            return result.json();\n          }\n          throw result;\n        })\n        .then(response => {\n          setrepoFunction(response.data.user.pinnedItems.edges);\n        })\n        .catch(function (error) {\n          console.error(\n            `${error} (because of this error, nothing is shown in place of Projects section. Also check if Projects section has been configured)`\n          );\n          setrepoFunction(\"Error\");\n        });\n    };\n    getRepoData();\n  }, []);\n\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n  if (\n    !(typeof repo === \"string\" || repo instanceof String) &&\n    openSource.display\n  ) {\n    return (\n      <Suspense fallback={renderLoader()}>\n        <div className=\"main\" id=\"opensource\">\n          <h1 className=\"project-title\">Github</h1>\n          <div className=\"repo-cards-div-main\">\n            {repo.map((v, i) => {\n              if (!v) {\n                console.error(\n                  `Github Object for repository number : ${i} is undefined`\n                );\n              }\n              return (\n                <GithubRepoCard repo={v} key={v.node.id} isDark={isDark} />\n              );\n            })}\n          </div>\n          <Button\n            text={\"More Projects\"}\n            className=\"project-button\"\n            href={socialMediaLinks.github}\n            newTab={true}\n          />\n        </div>\n      </Suspense>\n    );\n  } else {\n    return <FailedLoading />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}