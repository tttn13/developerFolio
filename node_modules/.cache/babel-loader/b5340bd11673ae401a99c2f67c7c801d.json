{"ast":null,"code":"import _slicedToArray from\"/Users/thinguyen/Desktop/dev/practice/developerFolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext,Suspense,lazy}from\"react\";import\"./Project.scss\";import Button from\"../../components/button/Button\";import{openSource,socialMediaLinks}from\"../../portfolio\";import StyleContext from\"../../contexts/StyleContext\";import Loading from\"../../containers/loading/Loading\";export default function Projects(){var GithubRepoCard=lazy(function(){return import(\"../../components/githubRepoCard/GithubRepoCard\");});var FailedLoading=function FailedLoading(){return null;};var renderLoader=function renderLoader(){return/*#__PURE__*/React.createElement(Loading,null);};var _useState=useState([]),_useState2=_slicedToArray(_useState,2),repo=_useState2[0],setrepo=_useState2[1];// todo: remove useContex because is not supported\nvar _useContext=useContext(StyleContext),isDark=_useContext.isDark;useEffect(function(){var getRepoData=function getRepoData(){fetch(\"/profile.json\").then(function(result){if(result.ok){return result.json();}throw result;}).then(function(response){setrepoFunction(response.data.user.pinnedItems.edges);}).catch(function(error){console.error(\"\".concat(error,\" (because of this error, nothing is shown in place of Projects section. Also check if Projects section has been configured)\"));setrepoFunction(\"Error\");});};getRepoData();},[]);function setrepoFunction(array){setrepo(array);}if(!(typeof repo===\"string\"||repo instanceof String)&&openSource.display){return/*#__PURE__*/React.createElement(Suspense,{fallback:renderLoader()},/*#__PURE__*/React.createElement(\"div\",{className:\"main\",id:\"opensource\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"project-title\"},\"Source Code\"),/*#__PURE__*/React.createElement(\"div\",{className:\"repo-cards-div-main\"},repo.map(function(v,i){if(!v){console.error(\"Github Object for repository number : \".concat(i,\" is undefined\"));}return/*#__PURE__*/React.createElement(GithubRepoCard,{repo:v,key:v.node.id,isDark:isDark});})),/*#__PURE__*/React.createElement(Button,{text:\"More Projects\",className:\"project-button\",href:socialMediaLinks.github,newTab:true})));}else{return/*#__PURE__*/React.createElement(FailedLoading,null);}}","map":{"version":3,"sources":["/Users/thinguyen/Desktop/dev/practice/developerFolio/src/containers/projects/Projects.js"],"names":["React","useState","useEffect","useContext","Suspense","lazy","Button","openSource","socialMediaLinks","StyleContext","Loading","Projects","GithubRepoCard","FailedLoading","renderLoader","repo","setrepo","isDark","getRepoData","fetch","then","result","ok","json","response","setrepoFunction","data","user","pinnedItems","edges","catch","error","console","array","String","display","map","v","i","node","id","github"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,CAAoCC,UAApC,CAAgDC,QAAhD,CAA0DC,IAA1D,KAAqE,OAArE,CACA,MAAO,gBAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,gCAAnB,CACA,OAAQC,UAAR,CAAoBC,gBAApB,KAA2C,iBAA3C,CACA,MAAOC,CAAAA,YAAP,KAAyB,6BAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,kCAApB,CACA,cAAe,SAASC,CAAAA,QAAT,EAAoB,CACjC,GAAMC,CAAAA,cAAc,CAAGP,IAAI,CAAC,iBAC1B,QAAO,gDAAP,CAD0B,EAAD,CAA3B,CAGA,GAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAM,KAAN,EAAtB,CACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,sBAAM,oBAAC,OAAD,MAAN,EAArB,CALiC,cAMTb,QAAQ,CAAC,EAAD,CANC,wCAM1Bc,IAN0B,eAMpBC,OANoB,eAOjC;AAPiC,gBAQhBb,UAAU,CAACM,YAAD,CARM,CAQ1BQ,MAR0B,aAQ1BA,MAR0B,CAUjCf,SAAS,CAAC,UAAM,CACd,GAAMgB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBC,KAAK,CAAC,eAAD,CAAL,CACGC,IADH,CACQ,SAAAC,MAAM,CAAI,CACd,GAAIA,MAAM,CAACC,EAAX,CAAe,CACb,MAAOD,CAAAA,MAAM,CAACE,IAAP,EAAP,CACD,CACD,KAAMF,CAAAA,MAAN,CACD,CANH,EAOGD,IAPH,CAOQ,SAAAI,QAAQ,CAAI,CAChBC,eAAe,CAACD,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBC,WAAnB,CAA+BC,KAAhC,CAAf,CACD,CATH,EAUGC,KAVH,CAUS,SAAUC,KAAV,CAAiB,CACtBC,OAAO,CAACD,KAAR,WACKA,KADL,iIAGAN,eAAe,CAAC,OAAD,CAAf,CACD,CAfH,EAgBD,CAjBD,CAkBAP,WAAW,GACZ,CApBQ,CAoBN,EApBM,CAAT,CAsBA,QAASO,CAAAA,eAAT,CAAyBQ,KAAzB,CAAgC,CAC9BjB,OAAO,CAACiB,KAAD,CAAP,CACD,CACD,GACE,EAAE,MAAOlB,CAAAA,IAAP,GAAgB,QAAhB,EAA4BA,IAAI,WAAYmB,CAAAA,MAA9C,GACA3B,UAAU,CAAC4B,OAFb,CAGE,CACA,mBACE,oBAAC,QAAD,EAAU,QAAQ,CAAErB,YAAY,EAAhC,eACE,2BAAK,SAAS,CAAC,MAAf,CAAsB,EAAE,CAAC,YAAzB,eACE,0BAAI,SAAS,CAAC,eAAd,gBADF,cAEE,2BAAK,SAAS,CAAC,qBAAf,EACGC,IAAI,CAACqB,GAAL,CAAS,SAACC,CAAD,CAAIC,CAAJ,CAAU,CAClB,GAAI,CAACD,CAAL,CAAQ,CACNL,OAAO,CAACD,KAAR,iDAC2CO,CAD3C,mBAGD,CACD,mBACE,oBAAC,cAAD,EAAgB,IAAI,CAAED,CAAtB,CAAyB,GAAG,CAAEA,CAAC,CAACE,IAAF,CAAOC,EAArC,CAAyC,MAAM,CAAEvB,MAAjD,EADF,CAGD,CATA,CADH,CAFF,cAcE,oBAAC,MAAD,EACE,IAAI,CAAE,eADR,CAEE,SAAS,CAAC,gBAFZ,CAGE,IAAI,CAAET,gBAAgB,CAACiC,MAHzB,CAIE,MAAM,CAAE,IAJV,EAdF,CADF,CADF,CAyBD,CA7BD,IA6BO,CACL,mBAAO,oBAAC,aAAD,MAAP,CACD,CACF","sourcesContent":["import React, {useState, useEffect, useContext, Suspense, lazy} from \"react\";\nimport \"./Project.scss\";\nimport Button from \"../../components/button/Button\";\nimport {openSource, socialMediaLinks} from \"../../portfolio\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport Loading from \"../../containers/loading/Loading\";\nexport default function Projects() {\n  const GithubRepoCard = lazy(() =>\n    import(\"../../components/githubRepoCard/GithubRepoCard\")\n  );\n  const FailedLoading = () => null;\n  const renderLoader = () => <Loading />;\n  const [repo, setrepo] = useState([]);\n  // todo: remove useContex because is not supported\n  const {isDark} = useContext(StyleContext);\n\n  useEffect(() => {\n    const getRepoData = () => {\n      fetch(\"/profile.json\")\n        .then(result => {\n          if (result.ok) {\n            return result.json();\n          }\n          throw result;\n        })\n        .then(response => {\n          setrepoFunction(response.data.user.pinnedItems.edges);\n        })\n        .catch(function (error) {\n          console.error(\n            `${error} (because of this error, nothing is shown in place of Projects section. Also check if Projects section has been configured)`\n          );\n          setrepoFunction(\"Error\");\n        });\n    };\n    getRepoData();\n  }, []);\n\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n  if (\n    !(typeof repo === \"string\" || repo instanceof String) &&\n    openSource.display\n  ) {\n    return (\n      <Suspense fallback={renderLoader()}>\n        <div className=\"main\" id=\"opensource\">\n          <h1 className=\"project-title\">Source Code</h1>\n          <div className=\"repo-cards-div-main\">\n            {repo.map((v, i) => {\n              if (!v) {\n                console.error(\n                  `Github Object for repository number : ${i} is undefined`\n                );\n              }\n              return (\n                <GithubRepoCard repo={v} key={v.node.id} isDark={isDark} />\n              );\n            })}\n          </div>\n          <Button\n            text={\"More Projects\"}\n            className=\"project-button\"\n            href={socialMediaLinks.github}\n            newTab={true}\n          />\n        </div>\n      </Suspense>\n    );\n  } else {\n    return <FailedLoading />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}