{"ast":null,"code":"import _slicedToArray from\"/Users/thinguyen/Desktop/dev/practice/developerFolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext}from\"react\";import\"./Blog.scss\";import BlogCard from\"../../components/blogCard/BlogCard\";import{blogSection}from\"../../portfolio\";import{Fade}from\"react-reveal\";import StyleContext from\"../../contexts/StyleContext\";export default function Blogs(){var _useContext=useContext(StyleContext),isDark=_useContext.isDark;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),mediumBlogs=_useState2[0],setMediumBlogs=_useState2[1];function setMediumBlogsFunction(array){setMediumBlogs(array);}//Medium API returns blogs' content in HTML format. Below function extracts blogs' text content within paragraph tags\nfunction extractTextContent(html){return typeof html===\"string\"?html.split(\"p>\").filter(function(el){return!el.includes(\">\");}).map(function(el){return el.replace(\"</\",\".\").replace(\"<\",\"\");}).join(\" \"):NaN;}useEffect(function(){if(blogSection.displayMediumBlogs===\"true\"){var getProfileData=function getProfileData(){fetch(\"/blogs.json\").then(function(result){if(result.ok){return result.json();}}).then(function(response){setMediumBlogsFunction(response.items);}).catch(function(error){console.error(\"\".concat(error,\" (because of this error Blogs section could not be displayed. Blogs section has reverted to default)\"));setMediumBlogsFunction(\"Error\");blogSection.displayMediumBlogs=\"false\";});};getProfileData();}},[]);if(!blogSection.display){return null;}return/*#__PURE__*/React.createElement(Fade,{bottom:true,duration:1000,distance:\"20px\"},/*#__PURE__*/React.createElement(\"div\",{className:\"main\",id:\"blogs\"},/*#__PURE__*/React.createElement(\"div\",{className:\"blog-header\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"blog-header-text\"},blogSection.title),/*#__PURE__*/React.createElement(\"p\",{className:isDark?\"dark-mode blog-subtitle\":\"subTitle blog-subtitle\"},blogSection.subtitle)),/*#__PURE__*/React.createElement(\"div\",{className:\"blog-main-div\"},/*#__PURE__*/React.createElement(\"div\",{className:\"blog-text-div\"},blogSection.displayMediumBlogs!==\"true\"||mediumBlogs===\"Error\"?blogSection.blogs.map(function(blog,i){return/*#__PURE__*/React.createElement(BlogCard,{key:i,isDark:isDark,blog:{url:blog.url,image:blog.image,title:blog.title,description:blog.description}});}):mediumBlogs.map(function(blog,i){return/*#__PURE__*/React.createElement(BlogCard,{key:i,isDark:isDark,blog:{url:blog.url,title:blog.title,description:extractTextContent(blog.content)}});})))));}","map":{"version":3,"sources":["/Users/thinguyen/Desktop/dev/practice/developerFolio/src/containers/blogs/Blogs.js"],"names":["React","useState","useEffect","useContext","BlogCard","blogSection","Fade","StyleContext","Blogs","isDark","mediumBlogs","setMediumBlogs","setMediumBlogsFunction","array","extractTextContent","html","split","filter","el","includes","map","replace","join","NaN","displayMediumBlogs","getProfileData","fetch","then","result","ok","json","response","items","catch","error","console","display","title","subtitle","blogs","blog","i","url","image","description","content"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from \"react\";\nimport \"./Blog.scss\";\nimport BlogCard from \"../../components/blogCard/BlogCard\";\nimport {blogSection} from \"../../portfolio\";\nimport {Fade} from \"react-reveal\";\nimport StyleContext from \"../../contexts/StyleContext\";\nexport default function Blogs() {\n  const {isDark} = useContext(StyleContext);\n  const [mediumBlogs, setMediumBlogs] = useState([]);\n  function setMediumBlogsFunction(array) {\n    setMediumBlogs(array);\n  }\n  //Medium API returns blogs' content in HTML format. Below function extracts blogs' text content within paragraph tags\n  function extractTextContent(html) {\n    return typeof html === \"string\"\n      ? html\n          .split(\"p>\")\n          .filter(el => !el.includes(\">\"))\n          .map(el => el.replace(\"</\", \".\").replace(\"<\", \"\"))\n          .join(\" \")\n      : NaN;\n  }\n  useEffect(() => {\n    if (blogSection.displayMediumBlogs === \"true\") {\n      const getProfileData = () => {\n        fetch(\"/blogs.json\")\n          .then(result => {\n            if (result.ok) {\n              return result.json();\n            }\n          })\n          .then(response => {\n            setMediumBlogsFunction(response.items);\n          })\n          .catch(function (error) {\n            console.error(\n              `${error} (because of this error Blogs section could not be displayed. Blogs section has reverted to default)`\n            );\n            setMediumBlogsFunction(\"Error\");\n            blogSection.displayMediumBlogs = \"false\";\n          });\n      };\n      getProfileData();\n    }\n  }, []);\n  if (!blogSection.display) {\n    return null;\n  }\n  return (\n    <Fade bottom duration={1000} distance=\"20px\">\n      <div className=\"main\" id=\"blogs\">\n        <div className=\"blog-header\">\n          <h1 className=\"blog-header-text\">{blogSection.title}</h1>\n          <p\n            className={\n              isDark ? \"dark-mode blog-subtitle\" : \"subTitle blog-subtitle\"\n            }\n          >\n            {blogSection.subtitle}\n          </p>\n        </div>\n        <div className=\"blog-main-div\">\n          <div className=\"blog-text-div\">\n            {blogSection.displayMediumBlogs !== \"true\" ||\n            mediumBlogs === \"Error\"\n              ? blogSection.blogs.map((blog, i) => {\n                  return (\n                    <BlogCard\n                      key={i}\n                      isDark={isDark}\n                      blog={{\n                        url: blog.url,\n                        image: blog.image,\n                        title: blog.title,\n                        description: blog.description\n                      }}\n                    />\n                  );\n                })\n              : mediumBlogs.map((blog, i) => {\n                  return (\n                    <BlogCard\n                      key={i}\n                      isDark={isDark}\n                      blog={{\n                        url: blog.url,\n                        title: blog.title,\n                        description: extractTextContent(blog.content)\n                      }}\n                    />\n                  );\n                })}\n          </div>\n        </div>\n      </div>\n    </Fade>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}